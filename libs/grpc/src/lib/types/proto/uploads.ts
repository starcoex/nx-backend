// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v5.29.3
// source: proto/uploads.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';
import { Observable } from 'rxjs';

export interface UploadFileRequest {
  /** 파일 데이터 조각 (chunk 단위) */
  chunk: Uint8Array;
  /** 업로드할 파일 이름 */
  filename: string;
}

export interface UploadFileResponse {
  /** 업로드 결과 메시지 */
  message: string;
  /** 업로드된 파일 경로 */
  filePath: string;
}

export interface FileUploadServiceClient {
  /** 파일 업로드를 처리하는 서비스 정의 */

  uploadFile(
    request: Observable<UploadFileRequest>
  ): Observable<UploadFileResponse>;
}

export interface FileUploadServiceController {
  /** 파일 업로드를 처리하는 서비스 정의 */

  uploadFile(
    request: Observable<UploadFileRequest>
  ):
    | Promise<UploadFileResponse>
    | Observable<UploadFileResponse>
    | UploadFileResponse;
}

export function FileUploadServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = [];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method
      );
      GrpcMethod('FileUploadService', method)(
        constructor.prototype[method],
        method,
        descriptor
      );
    }
    const grpcStreamMethods: string[] = ['uploadFile'];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method
      );
      GrpcStreamMethod('FileUploadService', method)(
        constructor.prototype[method],
        method,
        descriptor
      );
    }
  };
}

export const FILE_UPLOAD_SERVICE_NAME = 'FileUploadService';
